{
  "page": {
    "header": "My projects",
    "text1": "You can find some of my previous projects, which I made myself. Portfolio, I created it for the purpose of clearly presenting my person and my skills",
    "text2": "The below projects, which I created myself, are on GitHub as a public repository. You can see the repo and effects.",
    "text3": "If you are interested to know more about my work, commercial projects, and my technical skills, in projects in which I was involved and which technical stack I used, please contact me. I will describe it to you as much as I can. "
  },
  "actOutsCard": {
    "header": "Act Outs (Wordpress Page)",
    "shortDescription": "Created a custom theme for WordPress. With event calendar, videos, and login functionality for users."
  },
  "englishCard": {
    "header": "Flick Through English (Wordpress Page)",
    "shortDescription": "Created a Page for English lessons with different groups. I created a custom rare-academic-child theme (original parent Rara academic). In the theme, I added extra pages and post types for students, a login page, and redirecting students to the page, depending on what kind of role they have."
  },
  "bazaarCard": {
    "header": "React Example Page (Bazaar)",
    "shortDescription": "React App ‘Products Page’. This project is just for my self-study case: React, Redux, context, and Material UI. I created it after studying React, to try, check, and develop skills. It is just an example page for practice."
  },
  "kamcodeCard": {
    "header": "LandingPage",
    "shortDescription": "I created and deployed my own page. To create it, I used basic frontend technology: HTML, CSS, JavaScript and parcel.js. Page is responsive for different devices and has to mode theme color."
  },
  "portfolioCard": {
    "header": "Portfolio Page in React",
    "shortDescription": "My portfolio, shows information about me, some of my own projects, my skills, and my programming path. The page contains two modes dark and light, and also translation, Polish and English."
  },
  "customersListTable": {
    "header": "Table with user list in React and Node (FullStack)",
    "shortDescription": "Table with form to update users. It is created in React with Bootstrap and tailwindcss. We can create, edit, delete and add new user with personal data. Backend is made in Node with mongoose. Database is stored in MongodDB, "
  },
  "blogListCard": {
    "header": "Blog App - Helsinki Full stack course 2023",
    "shortDescription": "This is a  blog list application developed using React and React Bootstrap for the user interface. It was created as part of an online open course from the University of Helsinki. The application's main features include displaying a list of example blogs with details such as author name, title, and a link to the original blog. Logged-in users have the ability to comment on blogs and add likes to them. Additionally, the application has a backend component that is connected to a MongoDB database. Both the frontend and backend of the application have been tested, with the frontend testing done using Cypress and the backend testing using Jest."
  },
  "wpExampleTheme": {
    "header": "Wp custom Theme",
    "shortDescription": "This is a custom theme that can be used for the WordPress CMS. It includes default templates for pages, blogs, about us, and job sections. The front page is fully customizable to add your own content. I have integrated two widgets for testimonials and cards, which can be linked to specific pages. Additionally, in the footer, three columns can be added for links and social media links."
  },
  "projectsModal": {
    "header": "Description",
    "actoutsContent": {
      "title": "Act Outs (Theme WordPress)",
      "text1": "This is a project for a client, who wanted to have a dynamic page for his own business. I decided to create it in WordPress, to have the ability to add dynamic new lessons, and events with text, photos, and videos.",
      "text2": "I build my own theme which contains",
      "item1": "Header with Logo and menu (mobile menu)",
      "item2": "Front Page with sections:",
      "subItems": {
        "text1": "Section gallery slider (ability to add/change 4 images).",
        "text2": "Section welcome with featured picture and text.",
        "text3": "Section Featured Videos (displayed two pages with video)",
        "text4": "Section about (by choosing one page). Contain text and featured image.",
        "text5": "Section courses (by choosing 4 pages, containing  video).",
        "text6": "Section holiday Programs. The section is displayed as Slider. Programs added by custom post types. Contain featured images."
      },
      "item3": "Fourth Custom Archive Pages for each different group. Content is displayed for people who are logged in and have added roles",
      "item4": "One Page with the calendar. In the calendar, events are automatically added from the event post type. When a user wants to add an event needs to write the date of the event in an advanced custom field. Also can add the color of the event, a short description, tick if wants to display details as a popper in the calendar, and choose the priority of events (if events have the same dates). For this, I create WP json router and used JSON to get data, and added it to the js-year-calendar function. I used calendar js-year-calendar.",
      "item5": "Footer - User can add 4 widgets to footer.",
      "item6": "Also theme has:",
      "subItems2": {
        "text1": "Two Sidebars",
        "text2": "Extra widgets for Holiday Programs, which can be added to sidebar. Widget display just 4 earliest planned programs.",
        "text3": "Extra widgets for social links (4)."
      },
      "techStack": "Tech stack"
    },
    "bazaarContent": {
      "title": "Products Example Page (React)",
      "text1": "This React app contains:",
      "item1": "Main Page: List of product cards with category filter and price filter.",
      "item2": "Profile Page: logged user details, left sidebar clients panel, user setting.",
      "item3": "Login functionality (login modal).",
      "item4": "Sign Up Page: register new user, form with validation.",
      "item5": "For logged users:",
      "subItems": {
        "text1": "Add new Product Page: form with validation to add new products.",
        "text2": "Edit Product Page: form with validation, to edit existing product",
        "text3": "Products Page: list of products with delete or edit product functionality."
      },
      "item6": "Basket Sidebar: list of chosen Products with buttons to decrease, increase the number of products, and pay now button.",
      "item7": "Checkout Page: checkout with 5 steps to fill up.",
      "subItems2": {
        "text1": "Step one: displaying a list of chosen products, with a sidebar to use the rabat code and choose a delivery option.",
        "text2": "Step two: form with details option (address fields ) with summarize sidebar.",
        "text3": "Step three: payment form where user can fill inputs up for card details.",
        "text4": "Step four: summarize chosen products, address details, delivery option, payment option, and final price."
      }
    },
    "englishPageContent": {
      "title": "Flick Through English (Wordpress)",
      "text1": "This is a project for a client, who wanted to have a dynamic page for his own business. I decided to create it in WordPress, to have the ability to add dynamic new lessons, and events with text, photos, and videos.",
      "text2": "The child's rare-academic theme has:",
      "item1": "Header with Logo and menu (mobile menu)",
      "item2": "Front Page with sections:",
      "subItems": {
        "text1": "Section gallery slider with description and button read more.",
        "text2": "Section about me.",
        "text3": "Section Groups",
        "text4": "Section learning steps.",
        "text5": "Section contact.",
        "text6": "Footer"
      },
      "item3": "Fourth Custom Archive Pages for each different group. Content is displayed for people who are logged in and have added roles.",
      "item4": "Footer - The user can add 4 widgets to the footer."
    },
    "customerListTable": {
      "title": "Customers list react. Fullstack project",
      "text1": "React App in TypeScript. Create Table with Bootstrap and use tailwindcss to style. ",
      "text2": "Backend is made in Node.js . Deployed in render.com. Data is stored in MongoDB",
      "item1": "It has 3 pages:",
      "subItems": {
        "text1": "Home Page, to display all data, which is fetched from Api https://customers-api-sgd5.onrender.com. ",
        "text2": "Edit Page: Form for edit single customer.",
        "text3": "Add Page: Form to add new Customer."
      }
    },
    "blogListApp": {
      "title": "Blog App - Helsinki Full Stack Course 2023",
      "text1": "React app to display a list of blogs with titles, authors, and original URLs. React Bootstrap was used for styling.",
      "text2": "The backend of the application was developed using Node.js and is deployed on render.com. Data is stored in a MongoDB database, which is used under a free trial. Sometimes, there may be longer loading times for data due to the nature of free trials, which might come with certain limitations or restrictions.",
      "text3": "The blog list app includes:",
      "item1": "Blog List",
      "subItems1": {
        "text1": "Display an unordered list with blogs.",
        "text2": "Add blog button. After clicking 'add blog,' show a form to add a blog with fields for the title, author, URL (to the original blog), and a cancel button."
      },
      "item2": "Single Blog",
      "subItems2": {
        "text1": "After clicking a single blog, go to the page '/blogs/:id'.",
        "text2": "Display a card with blog details, and include features to remove and add likes.",
        "text3": "Comments section. Logged-in users are able to add comments below the blog."
      },
      "item3": "Users Page",
      "subItems3": {
        "text1": "Display all users in a table, along with the number of blogs they've added."
      },
      "item4": "Single User",
      "subItems4": {
        "text1": "After clicking a user, the link goes to a page displaying the user's profile with all the titles of blogs they've added."
      },
      "item5": "Pages with form for login and register user. "
    }
  }
}
